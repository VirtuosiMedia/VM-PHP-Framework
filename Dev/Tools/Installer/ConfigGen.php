<?php
/**
* @author Virtuosi Media Inc.
* @license: MIT License
* Description: Generates a configuration file for VM Framework
* Requirements: PHP 5.2 or higher
*/
class Tools_Installer_ConfigGen {
	
	protected $shortAppName;
	protected $dbType;
	protected $dbName;
	protected $username;
	protected $password;
	protected $host;

	/**
	 * @param string $shortAppName - The name of the application as one word
	 * @param string $dbType - The type of DB
	 * @param string $dbName - The name of the DB
	 * @param string $username - The username for connecting to the DB
	 * @param string $password - The password for connecting to the DB
	 * @param string $host - The hostname
	 */
	function __construct($shortAppName, $dbType, $dbName, $username, $password, $host){
		$this->shortAppName = $shortAppName;
		$this->dbType = $dbType;
		$this->dbName = $dbName;
		$this->username = $username;
		$this->password = $password;
		$this->host = $host;
		$this->generate();
	}
	
	protected function generate(){
		$xml = new Vm_Xml();
		$className = $this->shortAppName.'_Config';
				
		$fileContents = <<<EOT
<?php
/**
 * Configuration settings class generated by VM Framework
 */
class $className {

	private \$configSettings = array(
		'dbType'=>'$this->dbType',			//The database type
		'dbName'=>'$this->dbName',			//The database name
		'username'=>'$this->username',		//The database username
		'password'=>'$this->password',		//The database password
		'host'=>'$this->host',				//The host name, usually localhost
		'port'=>'',
		'charset'=>''
	);

	/**
	 * A magic method that returns the desired config setting string. Ex: \$config = new $className(); \$host = \$config->host;
	 */
	function __get(\$key) {
		return \$this->configSettings[\$key];
	}
}
?>
EOT;

		$file = new Vm_File('Config.php', 'includes/'.$this->shortAppName);
		$file->write($fileContents);

		if ($file->exists()){
			$this->tableRow = $xml->tr($xml->td("Config file generated for $this->shortAppName.", array('class'=>'pass')));
		} else {
			$this->tableRow = $xml->tr($xml->td("Config file could not be generated for $this->shortAppName.", array('class'=>'fail')));
		}		
	}

	/**
	 * @return string - The file generation status as an HTML table row
	 */
	public function getTableRow(){
		return $this->tableRow;
	}
}
?>